@import "./breakpoints.scss";

.App {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;

  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */

  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
  background-position: fixed;

  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;
  
  /* For text formatting. */
  color: white;
  text-shadow: 0 0 3px #000;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
          justify-content: center;

  .section-font {
    text-align: center;
    color: #252525;
    text-shadow: none;
    display: block;
  }
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  
  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  -webkit-transform: translateZ(-1px) scale(1.5);
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */ 
  z-index: -1;
}

/* The styling for the static div. */
.static {
  background: #fff;
  height: 140vh;
}

.overlay {
  //height: 10vh;
  margin-bottom: 20rem;
  position: -webkit-sticky;
  position: sticky;
  top: 10rem;
}
.overlay:after {
  background-image: url('../images/img-pch@2x.png');
  background-repeat: no-repeat center;
  background-size: cover;
  opacity: 0;
  z-index: 1;
}

/* Sets the actual background images to adorable kitties. This part is crucial. */
.bg1::after {
  background-image: url('../images/img-mip1.JPG');
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment: fixed;
  background-position: center; 
}

.bg2 {
  /* sticky position sticks image to page after a point */
  position: -webkit-sticky;
  position: sticky;
  top: 0;
}
.bg2::after {
  background-image: url('../images/img-pch@2x.png');
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  /* because I had to disable overflow-x and -y to enable react reveal
     I'm overwriting height and transform properties of parallax image 
     for venue section to have the image fit the width of the viewport */
  height: 100vh;
  -webkit-transform: translateZ(-1px) scale(1);
  transform: translateZ(-1px) scale(1);
}

.bg3 {
  background-image: url('../images/bkgd-white.svg');
  background-size: cover;
  height: 120vh;
}

.bg5 {
  background-image: url('../images/bkgd-b3.png');
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  height: 130vh;
}

.section.Venue {
  height: 70vh;
}

.section.Reception {
  text-shadow: none;
  color: #252525;
  h1 {
    margin-top: -18rem;
  }
}

.section.Directions {
  text-shadow: none;
  color: #252525;
  display: block;
  text-align: center;
  padding-top: 25%;
  @include md {
    padding-left: 10rem;
    padding-right: 10rem;
  }
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 20rem;
}

.section.RSVP {
  display: block;
  // z-index: 10;
  h1 {
    text-align: center;
    padding-top: 25vh;
    margin-top:0;
  }
  /* other form properties in layout stylesheet */
  h1, form {
    color: #252525;
    text-shadow: none;
  }
  form {
    @include md {
     // padding: 2rem 25%;
    }
    padding: 2rem;
  }
  
}

.section.Registry {
  text-shadow: none;
  color: #252525;
  display: block;
  text-align: center;
  padding-top: 25%;
  @include md {
    padding-left: 10rem;
    padding-right: 10rem;
  }
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 20rem;
  height: 100vh;
}

// =============================
// ====== CSS Transitions ======
// =============================
.example-appear {
  opacity: 0.01;
}

.example-appear.example-appear-active {
  opacity: 1;
  -webkit-transition: opacity 0.5s ease-in;
  -o-transition: opacity 0.5s ease-in;
  transition: opacity 0.5s ease-in;
}

.example-leave {
  opacity: 1;
}

.example-leave.example-leave-active {
  opacity: 0.01;
  -webkit-transition: opacity 300ms ease-in;
  -o-transition: opacity 300ms ease-in;
  transition: opacity 300ms ease-in;
}

